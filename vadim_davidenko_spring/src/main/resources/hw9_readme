Реализовать регистрацию пользователя в системе (оператора)

- зарегистрировать клиента (имя, фамилия, телефон, адрес, сумма, дата последнего заказа)
- вывести всех клиентов порциями по 10 человек
- вывести всех клиентов наездивших на сумму больше указанной
- вывести всех клиентов, делавших заказы за последний месяц

- оформить заказ (дата, клиент, сумма, адрес подачи, адрес назначения)
- отредактировать заказ (поменять свойства заказа)
- вывести список заказов на сумму в указанном диапазоне
- вывести список всех заказов порциями по 5 штук



3. Регистрация оператора
----------------------------
Реализовать регистрацию пользователя в системе (оператора). Данные об операторах хранятся в базе данных.
Пользователь вводит:
- логин (должен быть не менее 4 символов, не должен содержать пробелы)
- идентификационный номер (10 цифр, без букв и других знаков)
- пароль (должен быть не менее 8 символов,
включать большие и маленькие буквы, цифры, должен совпадать с подтверждением)
- подтверждение пароля
- пользователь с таким логином должен быть уникальным

hw9.taxi.service.AuthorizationService
boolean register(String login, String id, String pass) throws AuthenticationException
hw9.taxi.service.AuthorizationServiceImpl
hw9.taxi.domain.User
hw9.taxi.dao.UserDao
hw9.taxi.dao.UserDaoImpl
hw9.taxi.controller.RegisterServlet
hw9.taxi.exception.AuthenticationException
webapp
index.jsp
register.jsp - форма регистрации


4. Регистрация клиентов
-----------------------------

Учёт клиентов службы такси. Данные о клиентах хранятся в базе данных.

Функции:
- зарегистрировать клиента (имя, фамилия, телефон, адрес, сумма, дата последнего заказа)
- вывести всех клиентов порциями по 10 человек
- вывести всех клиентов наездивших на сумму больше указанной
- вывести всех клиентов, делавших заказы за последний месяц

hw9.Client
hw9.ClientService
boolean createClient(String name, String surname, String phone, String address) throws OrderException
List showClientsByPortion(int portionSize)
List showClientsGtSum(int sum)
List showClientsLastMonth()
hw9.ClientServiceImpl
hw9.taxi.dao.ClientDao
hw9.taxi.dao.ClientDaoImpl
hw9.taxi.controller.CreateClientServlet
hw9.taxi.controller.PortionClientServlet
hw9.taxi.controller.SumClientServlet
hw9.taxi.controller.MonthClientServlet
hw9.ClientException
webapp
index.jsp
dashboard.jsp - страница со списком функций (доступна после аутентификации)
registerClient.jsp - форма создания клиента
clients.jsp - список клиентов


5. Регистрация заказов
------------------------------
Добавить функции работы с заказами такси. Заказы хранятся в базе данных.
Функции:
- оформить заказ (дата, клиент, сумма, адрес подачи, адрес назначения)
- отредактировать заказ (поменять свойства заказа)
- вывести список заказов на сумму в указанном диапазоне
- вывести список всех заказов порциями по 5 штук

hw8.Order
hw8.Client
hw8.OrderService
boolean createOrder(Client client, Double amount, String addressFrom, String addressTo) throws OrderException
void editOrder(Long id, Client client, String amount, String addressFrom, String addressTo)
hw9.OrderServiceImpl
hw9.taxi.dao.OrderDao
hw9.taxi.dao.OrderDaoImpl
hw9.taxi.controller.OrderCreateServlet
hw9.taxi.controller.OrderEditServlet
hw9.taxi.controller.OrderShowServlet
hw9.taxi.controller.OrderShowPortionServlet
hw9.OrderException
webapp
index.jsp
dashboard.jsp - страница со списком функций
order.jsp - форма оформления/редактирования заказа
orders.jsp - список заказов

​